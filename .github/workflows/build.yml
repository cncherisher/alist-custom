name: Alist custom build

on:
  repository_dispatch:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: setup-pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: latest

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          docker pull techknowlogick/xgo:latest
          go install src.techknowlogick.com/xgo@latest
          sudo apt-get -qq update
          sudo apt-get -qq install upx axel aria2
          sudo timedatectl set-timezone "Asia/Shanghai"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir

      - name: Clone source code
        working-directory: /workdir
        run: |
          git clone https://github.com/alist-org/alist.git alist
          ln -sf /workdir/alist $GITHUB_WORKSPACE/alist

      - name: Load custom build script
        run: |
          [ -e build.sh ] && mv build.sh alist/build.sh
          chmod +x alist/build.sh

      - name: Build
        working-directory: /workdir/alist
        run: |
          bash build.sh release

      - name: Generate release tag
        id: tag
        run: |
          echo "::set-output name=release_tag::$(date +"%Y.%m.%d")"
          touch release.txt
          echo "::set-output name=status::success"

      - name: Upload artifacts to release
        uses: softprops/action-gh-release@v1
        if: steps.tag.outputs.status == 'success' && !cancelled()
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: /workdir/alist/build/*

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.2.0
        with:
          keep_latest: 3
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
